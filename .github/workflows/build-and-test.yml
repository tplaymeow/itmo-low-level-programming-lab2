name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        include:
          - c_compiler: gcc
            build_type: Release
          - c_compiler: clang
            build_type: Release
          - c_compiler: gcc
            build_type: Debug
            sanitize: On
          - c_compiler: clang
            build_type: Debug
            sanitize: On

    name: Build and Test (Ubuntu, ${{ matrix.build_type }}, ${{ matrix.c_compiler }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DSANITIZE_ADDRESS=${{ matrix.sanitize-address }}
          -DSANITIZE_UNDEFINED=${{ matrix.sanitize-undefined }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          echo "select from Users where (age > 18 and age <= 50) or (is_admin == true or name == "Admin" and age != 10);" | ${{ matrix.executable_path }}

  build-macos:
    runs-on: macos-latest

    strategy:
      fail-fast: false

      matrix:
        include:
          - c_compiler: gcc
            build_type: Release
          - c_compiler: clang
            build_type: Release
          - c_compiler: gcc
            build_type: Debug
            sanitize: On
          - c_compiler: clang
            build_type: Debug
            sanitize: On

    name: Build and Test (Ubuntu, ${{ matrix.build_type }}, ${{ matrix.c_compiler }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install Bison and Flex
        run: brew install bison flex

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DSANITIZE_ADDRESS=${{ matrix.sanitize-address }}
          -DSANITIZE_UNDEFINED=${{ matrix.sanitize-undefined }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          echo "select from Users where (age > 18 and age <= 50) or (is_admin == true or name == "Admin" and age != 10);" | ${{ matrix.executable_path }}