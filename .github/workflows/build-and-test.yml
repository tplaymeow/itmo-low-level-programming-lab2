name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            build_type: Release
            executable_path: ./itmo_low_level_programming_lab2
          - os: ubuntu-latest
            c_compiler: clang
            build_type: Release
            executable_path: ./itmo_low_level_programming_lab2
          - os: macos-latest
            c_compiler: clang
            install_bison_flex: brew install bison flex
            build_type: Release
            executable_path: ./itmo_low_level_programming_lab2
          - os: macos-latest
            c_compiler: gcc
            install_bison_flex: brew install bison flex
            build_type: Release
            executable_path: ./itmo_low_level_programming_lab2
          - os: ubuntu-latest
            c_compiler: gcc
            build_type: Debug
            sanitize-address: On
            sanitize-undefined: On
            executable_path: ./itmo_low_level_programming_lab2
          - os: ubuntu-latest
            c_compiler: clang
            build_type: Debug
            sanitize-address: On
            sanitize-undefined: On
            executable_path: ./itmo_low_level_programming_lab2
          - os: macos-latest
            c_compiler: clang
            install_bison_flex: brew install bison flex
            build_type: Debug
            sanitize-address: On
            sanitize-undefined: On
            executable_path: ./itmo_low_level_programming_lab2
          - os: macos-latest
            c_compiler: gcc
            install_bison_flex: brew install bison flex
            build_type: Debug
            sanitize-address: On
            sanitize-undefined: On
            executable_path: ./itmo_low_level_programming_lab2

    name: Build and Test (${{ matrix.os }}, ${{ matrix.build_type }}, ${{ matrix.c_compiler }})

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Install Bison and Flex
        run: ${{ matrix.install_bison_flex }}

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DSANITIZE_ADDRESS=${{ matrix.sanitize-address }}
          -DSANITIZE_UNDEFINED=${{ matrix.sanitize-undefined }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          diff -u ../examples/out/1.json <(cat ../examples/in/1.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/2.json <(cat ../examples/in/2.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/3.json <(cat ../examples/in/3.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/4.json <(cat ../examples/in/4.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/5.json <(cat ../examples/in/5.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/6.json <(cat ../examples/in/6.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/7.json <(cat ../examples/in/7.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/8.json <(cat ../examples/in/8.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/9.json <(cat ../examples/in/9.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/10.json <(cat ../examples/in/10.sql | ${{ matrix.executable_path }})
          diff -u ../examples/out/11.json <(cat ../examples/in/11.sql | ${{ matrix.executable_path }})
